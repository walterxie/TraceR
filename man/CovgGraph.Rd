% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GraphCoverage.R
\name{CovgGraph}
\alias{CovgGraph}
\alias{ggCoverage}
\title{Coverage Test Graph in R}
\usage{
ggCoverage(
  df,
  cov.per = -1,
  transp = 0.3,
  x.lab = "",
  y.lab = "Mean posterior",
  x.txt = NA,
  y.txt = NA,
  x.max.lim = NA,
  y.max.lim = NA,
  x.txt.just = 0
)
}
\arguments{
\item{df}{The data frame contains summary statistics of
the model validation result.}

\item{cov.per}{The percentage of coverage, which indicates how frequent
the "true" values are falling into the 95% HPD interval
of the posterior.}

\item{transp}{The transparency level of 95% HPD bar, default to 0.3.}

\item{x.lab, y.lab}{The label of x-axis or y-axis".}

\item{x.txt, y.txt}{The position of "covg. =" in the figure.
Default to NA, which will be automatically assigned
by minimum and maximum values. They are only used
for log scale.}

\item{x.max.lim, y.max.lim}{The maximum value in the axis,
which can be used to adjust the x and y to the same scale.
Default to NA.}

\item{x.txt.just}{Where the text "covg. =" starts, default to 0.}
}
\description{
The visualization functions to summarise the model validation result.
The data frame provided to the plot function must contain
the following columns, and same column names:

analysis  mean   HPD95.lower HPD95.upper   ESS   true.val  is.in
RSV2_58   0.438  0.327       0.554         948.  0.474     TRUE
}
\details{
\code{ggCoverage} returns a \code{\link{ggplot}} object to plot
the coverage of a model validation,
where the data frame has columns as statistics and rows as analyses.
The data frame can be a subset of full analyses, therefore the plot
will zoom into a better view to skip some outliers.
}
\examples{
param = "mu"
df <- createAnalysisDF(tru.val.par="Î¼", posteriorFile="mu.tsv")
p <- ggCoverage(df, x.lab=paste("True",param,"value"))
ggsave(paste0(param, "-all.pdf"), p, width = 4, height = 3)

cov.per <- round(nrow(subset(df, is.in==TRUE)) / nrow(df) * 100)
df.sub <- df \%>\% filter(mean < 0.045)
nrow(df.sub)
p <- ggCoverage(df.sub, cov.per, x.lab=paste("True",param,"value"))
ggsave(paste0(param, "-sub-",nrow(df.sub),".pdf"), p, width = 4, height = 3)

}
\keyword{Tracer}
