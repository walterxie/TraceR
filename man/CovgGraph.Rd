% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GraphCoverage.R
\name{CovgGraph}
\alias{CovgGraph}
\alias{ggCoverage}
\alias{ggDataSaturation}
\title{Coverage Test Graph in R}
\usage{
ggCoverage(
  df,
  cov.per = -1,
  transp = 0.3,
  x.lab = "",
  y.lab = "Mean posterior",
  x.txt = NA,
  y.txt = NA,
  x.max.lim = NA,
  y.max.lim = NA,
  x.txt.just = 0
)

ggDataSaturation(
  gene.dist,
  x.col = "simulation",
  y.col = "distance",
  colour.col = "is.in",
  x.lab = "",
  y.lab = "max(root height * mu * r)"
)
}
\arguments{
\item{df}{The data frame contains summary statistics of
the model validation result.}

\item{cov.per}{The percentage of coverage, which indicates how frequent
the "true" values are falling into the 95% HPD interval
of the posterior.}

\item{transp}{The transparency level of 95% HPD bar, default to 0.3.}

\item{x.lab, y.lab}{The label of x-axis or y-axis".}

\item{x.txt, y.txt}{The position of "covg. =" in the figure.
Default to NA, which will be automatically assigned
by minimum and maximum values. They are only used
for log scale.}

\item{x.max.lim, y.max.lim}{The maximum value in the axis,
which can be used to adjust the x and y to the same scale.
Default to NA.}

\item{x.txt.just}{Where the text "covg. =" starts, default to 0.}

\item{gene.dist}{The data frame contains simulation and distances.}

\item{x.col, y.col, colour.col}{The column names.}
}
\description{
The visualization functions to summarise the model validation result.
The data frame provided to the plot function must contain
the following columns, and same column names:

analysis  mean   HPD95.lower HPD95.upper   ESS   true.val  is.in
RSV2_58   0.438  0.327       0.554         948.  0.474     TRUE
}
\details{
\code{ggCoverage} returns a \code{\link{ggplot}} object to plot
the coverage of a model validation,
where the data frame has columns as statistics and rows as analyses.
The data frame can be a subset of full analyses, therefore the plot
will zoom into a better view to skip some outliers.

The data saturation in the simluated data may cause MCMC defficult to converge.
\code{ggDataSaturation} returns a \code{\link{ggplot}} object to visualise
the maximum distances of overall partitions \code{max(root height * mu * r)}.
It is also coloured by the coverages.
}
\examples{
param = "mu"
df.pos <- read_tsv(paste0(param, ".tsv"))
df.tru <- read_tsv("trueValue.tsv")
inOut <- markInOut(df.pos, df.tru, tru.val.par="Î¼")
write_tsv(inOut, paste0(param, "-coverage.tsv"))
# coverage
cov <- nrow(subset(inOut, is.in==TRUE)) / nrow(inOut)
p <- ggCoverage(inOut, x.lab=paste("True",param,"value"))
ggsave(paste0(param, ".pdf"), p, width = 4, height = 3)

# zoom in
df.sub <- inOut \%>\% filter(mean < 0.045)
nrow(df.sub)
cov.per <- round(cov * 100)
p <- ggCoverage(df.sub, cov.per, x.lab=paste("True",param,"value"))


### create data frame for data saturation visualisation

df.mu <- read_tsv("mu-coverage.tsv", col_types = cols()) \%>\%
  select("simulation", "true.val") \%>\% rename(mu=true.val)
df.r0 <- read_tsv("r_0-coverage.tsv", col_types = cols()) \%>\%
  select("simulation", "true.val") \%>\% rename(r0=true.val)
df.r1 <- read_tsv("r_1-coverage.tsv", col_types = cols()) \%>\%
  select("simulation", "true.val") \%>\% rename(r1=true.val)
df.r2 <- read_tsv("r_2-coverage.tsv", col_types = cols()) \%>\%
  select("simulation", "true.val") \%>\% rename(r2=true.val)
df.hei <- read_tsv("psi.height-coverage.tsv", col_types = cols()) \%>\%
  select("simulation", "true.val") \%>\% rename(height=true.val)

df.colour <- read_tsv("Theta-coverage.tsv", col_types = cols()) \%>\%
  select("simulation", "is.in")

gene.dist <- df.mu \%>\% inner_join(df.hei, by = "simulation") \%>\%
  inner_join(df.r0, by = "simulation") \%>\%
  inner_join(df.r1, by = "simulation") \%>\%
  inner_join(df.r2, by = "simulation") \%>\%
  mutate(max.r = pmax(r0, r1, r2)) \%>\%
  mutate(distance = height*mu*max.r) \%>\%
  select(-r0, -r1, -r2) \%>\%
  inner_join(df.colour, by = "simulation")

gene.dist
#   simulation  mu     height max.r  distance is.in
#   <chr>       <dbl>  <dbl>  <dbl>   <dbl>   <lgl>
# 1 al2_0      0.0165   72.0  1.36    1.62    TRUE
# 2 al2_1      0.00145  158.  1.99    0.458   TRUE

p <- ggDataSaturation(gene.dist)
}
\keyword{Coverage}
