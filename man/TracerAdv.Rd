% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TracerAdv.R
\name{TracerAdv}
\alias{TracerAdv}
\alias{summariseTracesAndTrees}
\alias{readTracesTSV}
\title{The Pipeline Functions to Summarise Bayesian MCMC Results}
\usage{
summariseTracesAndTrees(
  log.file,
  tree.file = NA,
  burn.in = 0.1,
  stats.fn.fun = function(x) {     paste0(sub("\\\\.log$", "", x), ".tsv") },
  tree.stats.fn.fun = function(x) {     paste0(x, ".tsv") }
)

readTracesTSV(traces.file = "sim_0.tsv", ...)
}
\arguments{
\item{log.file}{The BEAST log file containing posterior samples.}

\item{tree.file}{The BEAST tree log file containing posterior trees.
Default to NA, which will skip to report the tree statistics.}

\item{burn.in}{The proportion of samples treated as the burn-in stage
during MCMC. Default to 0.1.}

\item{stats.fn.fun, tree.stats.fn.fun}{The function to create the result file names
from the given log file names. Set to NA, if you do not want to
create the files.}

\item{traces.file}{The tsv file containing traces statistics.}
}
\description{
The several integrated functions based on \code{\link{Tracer}} and
\code{\link{TreeStats}}, which are useful to create a pipeline to
summarise groups of batch runs.
}
\details{
\code{summariseTracesAndTrees} creates the statistical summary of
traces from a BEAST log file and tree statistics from BEAST tree log file,
and save them into tsv files.

\code{readTracesTSV} loads traces tsv format file into a data frame,
and report the minimum ESS.
}
\examples{
WD = file.path("~/WorkSpace/MyValidations/")
setwd(WD)
log.files = list.files(pattern = "_([0-9]+).log")
log.files # exclude _true.log
for(lg in log.files) {
  # assume same file stem
  tree.file=paste0(sub('\\\\.log$', '', lg), ".trees")
  res <- summariseTracesAndTrees(lg, tree.file)
}

# skip tree logs
summariseTracesAndTrees(log.file="sim_0.log", tree.file=NA)

res <- readTracesTSV(traces.file="sim_0.tsv")
# res$minESS
traces <- res$traces

}
\seealso{
\code{\link{read_tsv}}
}
\keyword{TracerAdv}
